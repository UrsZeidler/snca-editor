[comment encoding = UTF-8 /]
[**
 * The documentation of the module generateHuiModelReport.
 */]
[module generateHuiModelReport('http://www.sernet.de/hitro', 'http://www.eclipse.org/emf/2002/Ecore')]

[import de::sernet::eclipse::hui::model::codegen::main::hitroCommons /]
[import de::sernet::eclipse::hui::model::codegen::main::generateDot /]


[**
 * The documentation of the template generateElement.
 * @param aDefaultRule
 */]
[template public generateElement(root : DocumentRoot)]
[comment @main/]
[comment][root.generateMediaWiki()/]
[generateDotFiles(root)/][/comment]

[htmlreport('iso-doc-de.html', 'ISO',  root.allISOEntities(), '_de')/]

[printEntityGroupProperyCSV('iso-entitys.csv', root.allISOEntities())/]
[printEntityGroupProperyCSV('bp-entitys.csv', root.allBPEntities())/]
[/template]



[template public generateMediaWiki(root : DocumentRoot)]
[generateSNCAMediaWikiFile('SNCA-ISO.mediawiki', 'SNCA for ISO', root.allISOEntities(),'_de')/]
[generateSNCAMediaWikiFile('SNCA-MOGS.mediawiki', 'SNCA for MOGS', root.allBPEntities(),'_de')/]
[generateSNCAMediaWikiFile('SNCA-OLD-GS.mediawiki', 'SNCA for OLD-GS', root.allOldBPEntities(),'_de')/]
[generateSNCAMediaWikiFile('SNCA-CONF.mediawiki', 'SNCA for Configuraion', root.allConfigurationEntities(),'_de')/]
[/template]

[template public generateSNCAMediaWikiFile(filename : String,docTitel : String, entities : Sequence(Huientity), lang :String)]
[file (filename, false, 'UTF-8')]
= [docTitel/] =

[for (e : Huientity | entities)]
[printEntityMediaWiki(e, lang)/]
[/for]
[/file]
[/template]

[template public printEntityMediaWiki (e : Huientity, lang : String) ]
== [e.getLocalizedName(lang)/] ([e.id/]) ==

doc : [e.getLocalizedName(lang, '_doc')/]

[for (r : Huirelation | e.huirelation)]
'''[r.getLocalizedName(lang)/] ([r.id/]) -->''' [ '[' /][ '[' /]#[e.getLocalizedName(lang)/] ([e.id/]) | [e.getLocalizedName(lang)/][ ']' /][ ']' /]<br />
<--[r.getLocalizedName(lang,'_reversename')/]<br />
doc: [r.getLocalizedName(lang, '_tooltip')/]<br />
[/for]


''' main properties '''
[for (p : Huiproperty | e.huiproperty)]
[printPropertyMediaWiki(p,lang)/]
[/for]

[for (g : Huipropertygroup | e.huipropertygroup)]
'''Group [g.getLocalizedName(lang)/]'''

[for (p : Huiproperty | g.huiproperty)]
[printPropertyMediaWiki(p,lang)/]
[/for]


[/for]

[/template]

[template public printPropertyMediaWiki (p : Huiproperty, lang: String) ]
'''[p.getLocalizedName(lang)/]''' ([p.id/])

type: [p.inputtype/][if (p.hasTags())] tags:'[p.tags/]'[/if]

[p.printPropertyFlags()/]

doc: [p.getLocalizedName(lang, '_tooltip')/]
[if (p.inputtype=Inputtypes::singleoption or 
p.inputtype=Inputtypes::numericoption or p.inputtype=Inputtypes::multioption)]
[if (p.inputtype=Inputtypes::singleoption or p.inputtype=Inputtypes::numericoption)]
one of:  
[elseif (p.inputtype=Inputtypes::multioption)]
many of:  
[/if]
[for (o : Option | p.option)]
* [o.getLocalizedName(lang)/] ([o.id/])-> "[o.value/]"  
[/for]
[/if]

[/template]


[template public generateSNCAMediaWikiFile(filename : String,docTitel : String, entities : Sequence(Huientity))]
[file (filename, false, 'UTF-8')]
= [docTitel/] =


[comment][root.allTags()/]

[for (s : String | root.allTags())]
  ->[s.tokenize(',')/]
[/for][/comment]

[for (e : Huientity | entities)]
[printEntityMediaWiki(e)/]
[/for]
[/file]
[/template]


[template public printEntityMediaWiki (e : Huientity) ]
== [e.name/] ==


[printEntityLocalization(e)/]

[printRelationsMediaWiki(e)/]

''' main properties '''
[for (p : Huiproperty | e.huiproperty)]
[printPropertyMediaWiki(p)/]
[/for]

[for (g : Huipropertygroup | e.huipropertygroup)]
'''Group [g.name/]'''

[for (p : Huiproperty | e.huiproperty)]
[printPropertyMediaWiki(p)/]
[/for]


[/for]

[/template]

[template public printRelationsMediaWiki(e : Huientity)]
 [e.name/] ([e.id/])| relations

[for (r : Huirelation | e.huirelation)]
'''[r.name/] ([r.id/]) -->''' [ '[' /][ '[' /]#[e.name/] | [e.name/][ ']' /][ ']' /] 
[printRelationLocalization(r)/]

[/for]
[/template]

[template public printPropertyMediaWiki (p : Huiproperty) ]
'''[p.name/]'''

type: [p.inputtype/][if (p.hasTags())] tags:'[p.tags/]'[/if]
[printPropertyLocalization(p)/]

[/template]

[comment][template public printMarkDown(root : DocumentRoot)]
[comment][printSNCAMarkdownFile('SNCA-ISO.md', 'SNCA for ISO', root.allISOEntities())/]
[printSNCAMarkdownFile('SNCA-MOGS.md', 'SNCA for MOGS', root.allBPEntities())/]
[printSNCAMarkdownFile('SNCA-OLD-GS.md', 'SNCA for OLD-GS', root.allOldBPEntities())/]
[printSNCAMarkdownFile('SNCA-CONF.md', 'SNCA for Configuration', root.allConfigurationEntities())/]
[printSNCAMarkdownFile('SNCA-ALL.md', 'SNCA for All elements', root.huientities.huientity)/]
[printSNCAGraph(root, '_de')/]
[printSNCAProblemGraph('_de')/]
[printEntityGrahFiles(root.huientities.huientity, 'image/', '_de')/][/comment]
[comment][printLeanMarkdown('SNCA-MOGS-lean.md', 'SNCA for MOGS', root.allBPEntities())/]
[printLeanMarkdown('SNCA-OLD-GS-lean.md', 'SNCA for OLD-GS', root.allOldBPEntities())/][/comment]

[comment][printRealtions('SNCA-MOGS-rel-', root.allBPEntities())/]
[printRealtions('SNCA-OLD-GS-rel-', root.allOldBPEntities())/][/comment]

[/template][/comment]

[template public printRealtions(filename : String,entities : Sequence(Huientity))]
[for (e : Huientity | entities)]
[if (not e.huirelation->isEmpty())]
[file ('rel/'+filename+e.id+'.csv', false, 'UTF-8')]
"relation id";"name en";"name de";"reversename en";"reversename de","target id"
[for (r : Huirelation | e.huirelation)]
[r.id/];"[r.getLocalizedName('', '_name')/]";"[r.getLocalizedName('_de', '_name')/]";"[r.getLocalizedName('', '_reversename')/]";"[r.getLocalizedName('_de', '_reversename')/]";[r.to.id/]
[/for]
[/file]
[/if]
[/for]
[/template]



[template public printOptionTypes(filename : String,entities : Sequence(Huientity))]
[file (filename, false, 'UTF-8')]
[for (e : Huientity | entities)]
[for (p : Huiproperty | e.huiproperty)]
[printOptions(p)/][/for]
[for (pg : Huipropertygroup | e.huipropertygroup)]
[for (p : Huiproperty | pg.huiproperty)]
[printOptions(p)/][/for][/for][/for]
[/file]
[/template]

[template public printOptions(p : Huiproperty)? (p.inputtype=Inputtypes::singleoption or 
p.inputtype=Inputtypes::numericoption or p.inputtype=Inputtypes::multioption)]
[p.id/][for (o : Option | p.option)before (';') separator (';')][o.id/][/for]

[/template]

[template public printLeanCSV(filename : String,docTitel : String, entities : Sequence(Huientity))]
[file (filename, false, 'UTF-8')]
[for (e : Huientity | entities)]
"[e.name/]";"";"[e.id/]"
[for (p : Huiproperty | e.huiproperty)]
"[p.getLocalizedName('_de')/]";"[p.getLocalizedName('')/]";"[p.id/]"
[/for]
[for (pg : Huipropertygroup | e.huipropertygroup)]
"[pg.getLocalizedName('_de')/]";"[pg.getLocalizedName('')/]";"[pg.id/]"
[for (p : Huiproperty | pg.huiproperty)]
"[p.getLocalizedName('_de')/]";"[p.getLocalizedName('')/]";"[p.id/]"
[/for]
;;;
[/for]
;;;
[/for]

[/file]
[/template]

[template public printEntityGroupProperyCSV(filename : String, entities : Sequence(Huientity))]
[file (filename, false, 'UTF-8')]
[for (e : Huientity | entities)]
[for (p : Huiproperty | e.huiproperty)]
"[e.name/]";"[e.id/]";"";"" ;"[p.getLocalizedName('_de')/]";"[p.id/]"
[/for]
[for (pg : Huipropertygroup | e.huipropertygroup)]
[for (p : Huiproperty | pg.huiproperty)]
"[e.name/]";"[e.id/]"; "[pg.getLocalizedName('_de')/]";"[pg.id/]"; "[p.getLocalizedName('_de')/]";"[p.id/]"
[/for]
[/for]
;;;
[/for]
[/file]
[/template]


[comment][template public printSNCAMarkdownFile(filename : String,docTitel : String, entities : Sequence(Huientity))]
[file (filename, false, 'UTF-8')]
# [docTitel/] 

#### toc

[for (e : Huientity | entities)]
[linkToMarkdownEntity(e)/]
[/for]

[for (e : Huientity | entities)]
[printMarkdownEntity(e)/]
[/for]
[/file]
[/template][/comment]


[comment][template public printMarkdownEntity(e : Huientity)]
## Entity: [e.name/] ([e.id/]) {#[e.id/]}

[printEntityLocalization(e)/]

[printMarkdownRelations(e)/]

### main properties

[for (p : Huiproperty | e.huiproperty)]
#[printProperty(p)/]
[/for]
[printPropertyGroupList(e.huipropertygroup)/]
[/template][/comment]

[comment][template public printMarkdownRelations(e : Huientity) ? (not e.huirelation->isEmpty())]
### [e.name/] ([e.id/]) relations

![ '[' /] relations for [e.name/][ ']' /] (image/[e.toGraphImageFilename()/])

[for (r : Huirelation | e.huirelation)]
**[r.name/] ([r.id/]) -->** [linkToMarkdownEntity(r.to)/]  
[printRelationLocalization(r)/]

[/for]
[/template][/comment]

[comment][template public linkToMarkdownEntity(e : Huientity)]
[ '[' /][e.name/] ([e.id/])[ ']' /](#[e.id/])[/template][/comment]


[comment][template public printPropertyGroupList(list : OrderedSet(Huipropertygroup))]
[for (pg : Huipropertygroup | list)]
[printPropertyGroup(pg)/]
[/for]
[/template]

[template private printPropertyList(list : OrderedSet(Huiproperty))]
[for (p : Huiproperty | list)]
[printProperty(p)/]
[/for]
[/template][/comment]

[comment][template public printPropertyGroup(pg : Huipropertygroup)]
### group: [pg.name/] ([pg.id/])

[printPropertyGroupLocalization(pg)/]

[if (pg.hasTags())]tags:'[pg.tags/]'[/if]  

[for (p : Huiproperty | pg.huiproperty)]
#[printProperty(p)/]
[/for]
[/template][/comment]

[comment][template public printProperty(p : Huiproperty)]
### [p.name/] ([p.id/])

type: **[p.inputtype/]**  
[if (p.hasTags())]tags:'[p.tags/]'[/if]  
[printPropertyLocalization(p)/]

[printPropertyFlags(p)/]
[for (d : Depends | p.depends)]
depends on: [d.option.name/]([d.option.id/]) [d.value/] [if (d.inverse)]inverse[/if]  
[/for]
[printDependencies(p)/]

[printPropertyOptions(p)/]
[printDefaultRule(p)/]
[/template][/comment]

[template public printDependencies(p : Huiproperty)?(not p.allDependendProperties()->isEmpty())]
dependencies:
[for (p : Huiproperty | p.allDependendProperties())]
[p.name/] ([p.id/])  
[/for]
[/template]


[template public printDefaultRule(p : Huiproperty) ? (p.hasDefaultRule())]
default rule: [p.defaultRule.class/]  
[for (pa : Param | p.defaultRule.param)]
[pa.id/]:  
[for (it : EFeatureMapEntry | pa.mixed)]
  >>[it.getValue()/]<<
[/for][/for]
[/template]

[comment][template public printPropertyOptions(p : Huiproperty) ? (p.hasOptions())]
[if (p.inputtype=Inputtypes::singleoption or p.inputtype=Inputtypes::numericoption)]
one of:  
[elseif (p.inputtype=Inputtypes::multioption)]
many of:  
[/if]
[printOptions(p.option)/]
[/template][/comment]

[template public printPropertyFlags(p : Huiproperty)]
[if (p.required)]
* required
[/if][if (p.showInObjectBrowser)]
* objectBrowser
[/if][if (p.isURL)]
* isUrl
[/if][if (p.editable)]
* isEditable
[/if][if (p.focus)]
* focus
[/if][if (p.visible)]
* visible
[/if][if (p.report)]
* report
[/if]
[/template]


[template public printPropertyLocalization(p : Huiproperty)]
de name   : [getProperty('snca-messages_de.properties', p.id)/]  
de tooltip: [getProperty('snca-messages_de.properties', p.id+'_tooltip')/]  
en name   : [getProperty('snca-messages.properties', p.id)/]  
en tooltip: [getProperty('snca-messages.properties', p.id+'_tooltip')/]  
[/template]

[template public printPropertyGroupLocalization(p : Huipropertygroup)]
de name   : [getProperty('snca-messages_de.properties', p.id)/]  
de tooltip: [getProperty('snca-messages_de.properties', p.id+'_tooltip')/]  
en name   : [getProperty('snca-messages.properties', p.id)/]  
en tooltip: [getProperty('snca-messages.properties', p.id+'_tooltip')/]  
[/template]


[template public printEntityLocalization(e : Huientity)]
de name   : [getProperty('snca-messages_de.properties', e.id)/]  
de doc    : [getProperty('snca-messages_de.properties', e.id+'_doc')/]  
en name   : [getProperty('snca-messages.properties', e.id)/]  
en doc    : [getProperty('snca-messages.properties', e.id)+'_doc'/]  
[/template]

[template public printRelationLocalization(r : Huirelation)]
de name           : [getProperty('snca-messages_de.properties', r.id+'_name')/]  
de reverse name   : [getProperty('snca-messages_de.properties', r.id+'_reversename')/]  
de tooltip        : [getProperty('snca-messages_de.properties', r.id+'_tooltip')/]  
en name           : [getProperty('snca-messages.properties', r.id+'_name')/]  
en reverse name   : [getProperty('snca-messages.properties', r.id+'_reversename')/]  
en tooltip        : [getProperty('snca-messages.properties', r.id+'_tooltip')/]  
[/template]



[template private toTag(content : String, tag : String, attributes : String )]
<[tag/][if (attributes <> '')] [attributes/][/if]>[content/]</[tag/]>
[/template]

[template public htmlreport(filename : String, docTitel : String, entities : Sequence(Huientity), lang :String)]
[file (filename, false, 'UTF-8')]
[docTitel.toTag('h1', '')/]
[for (e : Huientity | entities)]
<h2>[e.getLocalizedName(lang).toTag('a', 'id="'+e.id+'"')/]([e.id/])<h2/>
[e.getLocalizedName(lang, '_doc').toTag('div', 'class="doc"')/]

<h3> relations </h3>
[for (r : Huirelation | e.huirelation)]
[comment][r.name.toTag('p', 'class="relation"')/] [/comment]
[r.getLocalizedName(lang)/] ([r.id/]) --> <a href="#[r.to.id/]">[r.to.getLocalizedName(lang)/]</a><br/>
[/for]
<h3> properties </h3>
[htmlPrpoertyTable(e.huiproperty, lang)/]
[for (pg : Huipropertygroup | e.huipropertygroup)]
[pg.getLocalizedName(lang).toTag('h3', '')/]
[htmlPrpoertyTable(pg.huiproperty, lang)/]
[/for]
[/for]
[/file]
[/template]

[template public htmlPrpoertyTable(properties : OrderedSet(Huiproperty), lang : String)]
<div class="propertytable">
[for (p : Huiproperty | properties)]
[p.getLocalizedName(lang)/] ([p.id/])::[p.inputtype/]<br/>
[p.getLocalizedName(lang, '_tooltip').toTag('div', 'class="doc"')/]

<div class="dep">
[for (p : Huiproperty | p.allDependendProperties())]
--> [p.name/] ([p.id/])<br/>
[/for]
</div>

[/for]

</div>
[/template]



[comment][template public printOptions(list : OrderedSet(Option))]

[for (o : Option | list)]
[printOption(o)/]
[/for]
[/template]

[template public printOption (o : Option) ]
* [o.id/] [o.name/] '[o.value/]'  
[/template][/comment]

