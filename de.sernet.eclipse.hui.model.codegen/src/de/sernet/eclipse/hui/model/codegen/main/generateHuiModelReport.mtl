[comment encoding = UTF-8 /]
[**
 * The documentation of the module generateHuiModelReport.
 */]
[module generateHuiModelReport('http://www.sernet.de/hitro', 'http://www.eclipse.org/emf/2002/Ecore')]

[import de::sernet::eclipse::hui::model::codegen::main::hitroCommons /]
[import de::sernet::eclipse::hui::model::codegen::main::generateJsonSchema /]
[import de::sernet::eclipse::hui::model::codegen::main::generateJavaCode /]

[**
 * The documentation of the template generateElement.
 * @param aDefaultRule
 */]
[template public generateElement(root : DocumentRoot)]
[comment @main/]
[root.printMediaWiki()/]
[root.printMarkDown()/]
[root.generateJsonSchema()/]
[root.generateJavaClasses()/]
[/template]

[query public allTags(root : DocumentRoot) : Set(String) = root.huientities.huientity
	->collect(allProperties()
	->collect(tags))
	->flatten()
	->asSet()
	->union(root.huientities.huientity.huipropertygroup
		->collect(tags)->flatten()
		->asSet())
 /]


[template public printMediaWiki(root : DocumentRoot)]
[printSNCAMediaWikiFile('SNCA-ISO.mediawiki', 'SNCA for ISO', root.allISOEntities())/]
[printSNCAMediaWikiFile('SNCA-MOGS.mediawiki', 'SNCA for MOGS', root.allISOEntities())/]
[printSNCAMediaWikiFile('SNCA-OLD-GS.mediawiki', 'SNCA for OLD-GS', root.allOldBPEntities())/]
[printSNCAMediaWikiFile('SNCA-CONF.mediawiki', 'SNCA for Configuraion', root.allConfigurationEntities())/]
[/template]

[template public printSNCAMediaWikiFile(filename : String,docTitel : String, entities : Sequence(Huientity))]
[file (filename, false, 'UTF-8')]
= [docTitel/] =


[comment][root.allTags()/]

[for (s : String | root.allTags())]
  ->[s.tokenize(',')/]
[/for][/comment]

[for (e : Huientity | entities)]
[printEntityMediaWiki(e)/]
[/for]
[/file]
[/template]


[template public printEntityMediaWiki (e : Huientity) ]
== [e.name/] ==


[printEntityLocalization(e)/]

[printRelations(e)/]

=== main properties ===
[for (p : Huiproperty | e.huiproperty)]
[printPropertyMediaWiki(p)/]
[/for]

[for (g : Huipropertygroup | e.huipropertygroup)]
==== [g.name/] ====

[for (p : Huiproperty | e.huiproperty)]
[printPropertyMediaWiki(p)/]
[/for]


[/for]

[/template]

[template public printPropertyMediaWiki (p : Huiproperty) ]
===== [p.name/] =====

type: [p.inputtype/][if (p.hasTags())] tags:'[p.tags/]'[/if]
[printPropertyLocalization(p)/]

[/template]

[template public printMarkDown(root : DocumentRoot)]
[printSNCAMarkdownFile('SNCA-ISO.md', 'SNCA for ISO', root.allISOEntities())/]
[printSNCAMarkdownFile('SNCA-MOGS.md', 'SNCA for MOGS', root.allISOEntities())/]
[printSNCAMarkdownFile('SNCA-OLD-GS.md', 'SNCA for OLD-GS', root.allOldBPEntities())/]
[printSNCAMarkdownFile('SNCA-CONF.md', 'SNCA for Configuration', root.allConfigurationEntities())/]
[/template]



[template public printSNCAMarkdownFile(filename : String,docTitel : String, entities : Sequence(Huientity))]
[file (filename, false, 'UTF-8')]
# [docTitel/] 

#### toc

[for (e : Huientity | entities)]
[linkToEntity(e)/]
[/for]

[for (e : Huientity | entities)]
[printEntity(e)/]
[/for]
[/file]
[/template]


[template public printEntity(e : Huientity)]
## Entity: [e.name/] ([e.id/]) {#[e.id/]}

[printEntityLocalization(e)/]

[printRelations(e)/]

### main properties

[for (p : Huiproperty | e.huiproperty)]
#[printProperty(p)/]
[/for]
[printPropertyGroupList(e.huipropertygroup)/]
[/template]

[template public printRelations(e : Huientity)]
### [e.name/] ([e.id/]) relations

[for (r : Huirelation | e.huirelation)]
**[r.name/] ([r.id/]) -->** [linkToEntity(r.to)/]  
[printRelationLocalization(r)/]

[/for]
[/template]

[template public linkToEntity(e : Huientity)]
[ '[' /][e.name/] ([e.id/])[ ']' /](#[e.id/])[/template]


[template public printPropertyGroupList(list : OrderedSet(Huipropertygroup))]
[for (pg : Huipropertygroup | list)]
[printPropertyGroup(pg)/]
[/for]
[/template]

[template private printPropertyList(list : OrderedSet(Huiproperty))]
[for (p : Huiproperty | list)]
[printProperty(p)/]
[/for]
[/template]

[template public printPropertyGroup(pg : Huipropertygroup)]
### group: [pg.name/] ([pg.id/])

[printPropertyGroupLocalization(pg)/]

[if (pg.hasTags())]tags:'[pg.tags/]'[/if]  

[for (p : Huiproperty | pg.huiproperty)]
#[printProperty(p)/]
[/for]
[/template]

[template public printProperty(p : Huiproperty)]
### [p.name/] ([p.id/])

type: **[p.inputtype/]**  
[if (p.hasTags())]tags:'[p.tags/]'[/if]  
[printPropertyLocalization(p)/]

[printPropertyFlags(p)/]
[for (d : Depends | p.depends)]
depends on: [d.option.name/]([d.option.id/]) [d.value/] [if (d.inverse)]inverse[/if]  
[/for]
[printDependencies(p)/]

[printPropertyOptions(p)/]
[printDefaultRule(p)/]
[/template]

[template public printDependencies(p : Huiproperty)?(not p.allDependendProperties()->isEmpty())]
dependencies:
[for (p : Huiproperty | p.allDependendProperties())]
[p.name/] ([p.id/])  
[/for]
[/template]


[template public printDefaultRule(p : Huiproperty) ? (p.hasDefaultRule())]
default rule: [p.defaultRule.class/]  
[for (pa : Param | p.defaultRule.param)]
[pa.id/]:  
[for (it : EFeatureMapEntry | pa.mixed)]
  >>[it.getValue()/]<<
[/for][/for]
[/template]

[template public printPropertyOptions(p : Huiproperty) ? (p.hasOptions())]
[if (p.inputtype=Inputtypes::singleoption or p.inputtype=Inputtypes::numericoption)]
one of:  
[elseif (p.inputtype=Inputtypes::multioption)]
many of:  
[/if]
[printOptions(p.option)/]
[/template]

[template public printPropertyFlags(p : Huiproperty)]
[if (p.required)]
* required
[/if][if (p.showInObjectBrowser)]
* objectBrowser
[/if][if (p.isURL)]
* isUrl
[/if][if (p.editable)]
* isEditable
[/if][if (p.focus)]
* focus
[/if][if (p.visible)]
* visible
[/if][if (p.report)]
* report
[/if]
[/template]

[template public printPropertyLocalization(p : Huiproperty)]
de name   : [getProperty('snca-messages_de.properties', p.id)/]  
de tooltip: [getProperty('snca-messages_de.properties', p.id+'_tooltip')/]  
en name   : [getProperty('snca-messages.properties', p.id)/]  
en tooltip: [getProperty('snca-messages.properties', p.id+'_tooltip')/]  
[/template]

[template public printPropertyGroupLocalization(p : Huipropertygroup)]
de name   : [getProperty('snca-messages_de.properties', p.id)/]  
de tooltip: [getProperty('snca-messages_de.properties', p.id+'_tooltip')/]  
en name   : [getProperty('snca-messages.properties', p.id)/]  
en tooltip: [getProperty('snca-messages.properties', p.id+'_tooltip')/]  
[/template]


[template public printEntityLocalization(e : Huientity)]
de name   : [getProperty('snca-messages_de.properties', e.id)/]  
de doc    : [getProperty('snca-messages_de.properties', e.id+'_doc')/]  
en name   : [getProperty('snca-messages.properties', e.id)/]  
en doc    : [getProperty('snca-messages.properties', e.id)+'_doc'/]  
[/template]

[template public printRelationLocalization(r : Huirelation)]
de name           : [getProperty('snca-messages_de.properties', r.id+'_name')/]  
de reverse name   : [getProperty('snca-messages_de.properties', r.id+'_reversename')/]  
de tooltip        : [getProperty('snca-messages_de.properties', r.id+'_tooltip')/]  
en name           : [getProperty('snca-messages.properties', r.id+'_name')/]  
en reverse name   : [getProperty('snca-messages.properties', r.id+'_reversename')/]  
en tooltip        : [getProperty('snca-messages.properties', r.id+'_tooltip')/]  
[/template]

[template public printOptions(list : OrderedSet(Option))]

[for (o : Option | list)]
[printOption(o)/]
[/for]
[/template]

[template public printOption (o : Option) ]
* [o.id/] [o.name/] '[o.value/]'  
[/template]

